
<script src="https://cdn.jsdelivr.net/gh/alumuko/vanilla-datetimerange-picker@latest/dist/vanilla-datetimerange-picker.js"></script>


<div class="w-full h-full">
   <div class="flex flex-col">
     <input type="text" data-controller="daterangepicker" size="24" style="text-align:center">


   <h1 class="text-2xl auto mx-auto text-center"> RepoData for <%= @repo.name %> </h1>
    <% repo_view_data = RepoData::RepoTrafficDataViewsDaily.where(repo: @repo) %>
    <% repo_view_counts = repo_view_data.map { |data| [data.timestamp, data.count] } %>

    <%# collect uniques and fill in 0 for any missing dates  %>
    <% repo_view_counts = repo_view_data.map { |data| [data.timestamp.strftime("%Y-%m-%d"), data.count] } %>
    <% start_date = repo_view_data.minimum(:timestamp).to_date %>
    <% end_date = repo_view_data.maximum(:timestamp).to_date %>
    <% all_dates = (start_date..end_date).map { |date| date.strftime("%Y-%m-%d") } %>
    <% repo_view_counts_hash = repo_view_counts.to_h %>
    <% all_dates.each do |date| %>
      <% repo_view_counts_hash[date] ||= 0 %>
    <% end %>
    <% repo_view_counts = repo_view_counts_hash.to_a %>
    <% repo_view_counts = repo_view_counts.sort_by { |date, _| Date.parse(date) } %>

    <% repo_view_uniques = repo_view_data.map { |data| [data.timestamp.strftime("%Y-%m-%d"), data.uniques] } %>
    <% repo_view_uniques_hash = repo_view_uniques.to_h %>
    <% all_dates.each do |date| %>
      <% repo_view_uniques_hash[date] ||= 0 %>
    <% end %>
    <% repo_view_uniques = repo_view_uniques_hash.to_a %>
    <% repo_view_uniques = repo_view_uniques.sort_by { |date, _| Date.parse(date) } %>

    <% combined_view_data = [
    { name: 'Views', data: repo_view_counts.to_h },
    { name: 'Uniques', data: repo_view_uniques.to_h }
    ] %>
    <% repo_clone_data = RepoData::RepoTrafficDataClonesDaily.where(repo: @repo) %>

    <%# collect counts and fill in 0 for any missing dates  %>
    <% repo_clone_counts = repo_clone_data.map { |data| [data.timestamp.strftime("%Y-%m-%d"), data.count] } %>
    <% start_date = repo_clone_data.minimum(:timestamp).to_date %>
    <% end_date = repo_clone_data.maximum(:timestamp).to_date %>
    <% all_dates = (start_date..end_date).map { |date| date.strftime("%Y-%m-%d") } %>
    <% repo_clone_counts_hash = repo_clone_counts.to_h %>
    <% all_dates.each do |date| %>
      <% repo_clone_counts_hash[date] ||= 0 %>
    <% end %>
    <% repo_clone_counts = repo_clone_counts_hash.to_a %>
    <% repo_clone_counts = repo_clone_counts.sort_by { |date, _| Date.parse(date) } %>

    <%# collect uniques and fill in 0 for any missing dates  %>
    <% repo_clone_uniques = repo_clone_data.map { |data| [data.timestamp.strftime("%Y-%m-%d"), data.uniques] } %>
    <% repo_clone_uniques_hash = repo_clone_uniques.to_h %>
    <% all_dates.each do |date| %>
      <% repo_clone_uniques_hash[date] ||= 0 %>
    <% end %>
    <% repo_clone_uniques = repo_clone_uniques_hash.to_a %>
    <% repo_clone_uniques = repo_clone_uniques.sort_by { |date, _| Date.parse(date) } %>
    
    <% combined_clone_data = [
    { name: 'Views', data: repo_clone_counts.to_h },
    { name: 'Uniques', data: repo_clone_uniques.to_h }
    ] %>
    <div class="flex flex-col w-3/4 auto mx-auto">
        <div class="pb-5">
            <%= line_chart combined_view_data, title: "view counts", xtitle: "date", ytitle: "count" %>
        </div>
        <div class="pb-5">
            <%= line_chart combined_clone_data, title: "clone counts", xtitle: "date", ytitle: "count" %>
        </div>
    </div>
</div>
</div>

